# This workflow will upload a Python Package to PyPI when a release is created.
# It uses the modern "trusted publishing" method, which is more secure than API tokens.
# For more information see: https://docs.pypi.org/trusted-publishers/using-a-publisher/

name: Publish Python Package to PyPI

on:
  # This workflow runs when a new GitHub Release is published.
  release:
    types: [published]

# Specifies the permissions the workflow needs to run.
permissions:
  # This permission is required for the workflow to access the OIDC token.
  id-token: write
  # This permission is required to checkout the repository.
  contents: read

jobs:
  # This job builds the package and creates distribution files.
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install build dependencies
        run: python -m pip install --upgrade build

      - name: Build package
        run: python -m build

      - name: Store the distribution files
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  # This job publishes the package to PyPI.
  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest

    # This is the critical part that connects to your PyPI settings.
    # The environment name MUST match the one you configured on PyPI.
    environment:
      name: env # This must match the environment name in your PyPI trusted publisher settings.
      url: https://pypi.org/p/marscan

    steps:
      - name: Download the distribution files
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # The 'with' block is not needed here because the action automatically
        # uses the trusted publisher configuration from the environment.